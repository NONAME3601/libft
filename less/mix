   
    /*
    int k = 1;
    char l[100];
    
    double complex z1 = 1 + 8 * I;
    double complex z2 = -23 + 1 * I;

    double complex z3 = z1 / z2;

    printf("abs = %lf\n", cabs(z3));
    printf("%.1lf + %.1lf * i\n\n", creal(z3), cimag(z3));

    char g = '/';

    printf("%d\n", 'a' - 'A');
    */

////////////////////////////////////////////math////////////////////////////////////////
/*
    struct flat_vec
    {
        int x;
        int y;
    };
    
    struct flat_vec v_1;
    struct flat_vec v_2;
    struct flat_vec v_resh;



    scanf("%d", &v_1.x);
    scanf("%d", &v_1.y);
    scanf("%d", &v_2.x);
    scanf("%d", &v_2.y);
    
    v_resh.x = v_1.x + v_2.x;
    v_resh.y = v_1.y + v_2.y;
    printf("(%d, %d)", v_resh.x, v_resh.y);

    v_resh.x = v_1.x - v_2.x;
    v_resh.y = v_1.x - v_2.x;
    printf("(%d, %d)", v_resh.x, v_resh.y);

*/
////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////geom////////////////////////////////////////

    /*struct beg
    {
        int x;
        int y;
    };

    struct end
    {
        int x;
        int y;
    };
    
    struct flat_vec
    {
        struct beg beg_v;
        struct end end_v;
    };
    
    struct flat_vec v_1;
    struct flat_vec v_2;
    struct flat_vec v_resh;
    int buf_1;
    int buf_2;


    scanf("%d", &v_1.beg_v.x);
    scanf("%d", &v_1.beg_v.y);
    scanf("%d", &v_1.end_v.x);
    scanf("%d", &v_1.end_v.y);
    scanf("%d", &v_2.beg_v.x);
    scanf("%d", &v_2.beg_v.y);
    scanf("%d", &v_2.end_v.x);
    scanf("%d", &v_2.end_v.y);
    
    
    
    v_resh.beg_v.x = v_1.beg_v.x;
    v_resh.beg_v.y = v_1.beg_v.y;
    
    buf_1 = sqrt(pow(v_resh.end_v.x - v_resh.beg_v.x, 2) +
                pow(v_resh.end_v.y - v_resh.beg_v.y, 2));

    printf("(%d, %d), (%d, %d)", v_resh.beg_v.x, v_resh.beg_v.y, v_resh.end_v.x, v_resh.end_v.y);
    printf("%d", buf_1);*/

////////////////////////////////////////////////////////////////////////////////////////



    /*
    // getc(stdin);
    // getchar();

    scanf("%c", &c);
    while (! isblank(c))
    {
        scanf("%c", &c);
        printf("%c", c);
    }
    */
    

    /*
    k = 0;
    while (isdigit(c = getchar()))
    {
        l[k++] = c;
    }
    
    int res = 0;

    while (--k >= 0)
    {
        // l[k] - '0'
    }

    for (int i = k - 1; i > 0; --i) 
    {
        l[i] - '0';
    }
    */

    // r w a
    // r+ w+
    /*FILE *f = fopen("file.txt", "rb");
    char buf[BUFSIZ] = "hi from program\n";
    size_t size = 0;

    if (f == NULL)
    {
        printf("open file ERROR\n");
        return 0;
    }

    fseek(f, 0, SEEK_END);
    size = ftell(f);
    fseek(f, 0, SEEK_SET);

    size_t readed = fread(buf, 1, sizeof(buf), f);
    printf("size = %lu\n%lu\nreaded: %s\n", size, readed, buf);

    ///fwrite(buf, 1, strlen(buf), f);

    fclose(f);*/


    FILE *f = fopen("main", "rb");
    char *buf;

    fseek(f, 0, SEEK_END);
    size_t size = ftell(f);
    fseek(f, 0, SEEK_SET);

    buf = (char*)malloc(size);

    size_t readed = fread(buf, 1, size, f);

    for (int i = 0; i < 15; ++i)
        printf("0x%02X ", buf[i]);

    fclose(f);
    free(buf);